{"name": "test_all_cancel", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <testcases.testCancelOrder.test_Qcancelorder.TestCancelOrder object at 0x009C9270>\nsetup_fixture = (<businessPage.cancel_order_page.CancelOrder object at 0x009C9790>, <businessPage.trade_first_page.TradeFirst object a...<businessPage.choice_oder_page.ChoiceOrder object at 0x009C9AD0>, <businessPage.order_page.Order object at 0x009C9690>)\n\n    @pytest.mark.usefixtures('back_fixture')\n    def test_all_cancel(self, setup_fixture):\n        cancleorder,tradehome,choiceorder,order= setup_fixture\n        # 构造1个撤单数据\n>       tradehome.to_trade_page()\n\ntestCancelOrder\\test_Qcancelorder.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\businessPage\\trade_first_page.py:40: in to_trade_page\n    self.get_clickable_element(self.trade_page,\"交易\")\n..\\common\\common_fun.py:276: in get_clickable_element\n    raise e\n..\\common\\common_fun.py:270: in get_clickable_element\n    ele = WebDriverWait(self.driver,timeout,0.5).until(EC.element_to_be_clickable(loc))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"3e7e3322-ff2d-4f2a-953a-a52f7e784abd\")>\nmethod = <selenium.webdriver.support.expected_conditions.element_to_be_clickable object at 0x009C9710>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "attachments": [{"name": "log", "source": "8cc627cd-b1a1-4750-a73e-fddd360a81ce-attachment.txt", "type": "text/plain"}], "start": 1652712819814, "stop": 1652712831287, "uuid": "6d1f51a4-e9a4-4afc-ad70-2b553cca749f", "historyId": "30e84db457748a4c5279c6b1eb85feaa", "testCaseId": "9f05875202e3956f57ad585c5386e84b", "fullName": "testCancelOrder.test_Qcancelorder.TestCancelOrder#test_all_cancel", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('back_fixture')"}, {"name": "parentSuite", "value": "testCancelOrder"}, {"name": "suite", "value": "test_Qcancelorder"}, {"name": "subSuite", "value": "TestCancelOrder"}, {"name": "host", "value": "Win102021AVUCSJ"}, {"name": "thread", "value": "5784-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCancelOrder.test_Qcancelorder"}]}