{"name": "test_sort_return", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <testcases.testPosition.test_Qposition.TestPosition object at 0x00E244D0>\nsetup_fixture = (<businessPage.position_page.Position object at 0x00E240B0>, <businessPage.order_page.Order object at 0x00E24090>, <businessPage.trade_first_page.TradeFirst object at 0x00E24050>)\n\n    @pytest.mark.usefixtures('back_fixture')\n    def test_sort_return(self, setup_fixture):\n        position,order,tradehome = setup_fixture\n        # 持仓降序\n        order.c_hold_num()\n>       res = order.desc(2)\n\ntestPosition\\test_Qposition.py:106: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\businessPage\\order_page.py:558: in desc\n    arr = self.get_num(N)\n..\\businessPage\\order_page.py:509: in get_num\n    ele = self.get_visible_elements(self.hold_counts,\"所有持仓可用数\")\n..\\common\\common_fun.py:224: in get_visible_elements\n    raise e\n..\\common\\common_fun.py:219: in get_visible_elements\n    WebDriverWait(self.driver,timeout,0.5).until(EC.visibility_of_element_located(loc))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"0e7b83d5-90bd-4243-ba0f-6351e0c81c1e\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x00E248F0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "attachments": [{"name": "log", "source": "41183293-0606-4a6a-9ae6-1de11c2db946-attachment.txt", "type": "text/plain"}], "start": 1652795716599, "stop": 1652795731614, "uuid": "bed95606-4acb-4565-878d-ea8f584de4e5", "historyId": "3a25283236e7be47e4fda261eebcebfa", "testCaseId": "de2f4ed6d01973823ac3adc96e48a2eb", "fullName": "testPosition.test_Qposition.TestPosition#test_sort_return", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('back_fixture')"}, {"name": "parentSuite", "value": "testPosition"}, {"name": "suite", "value": "test_Qposition"}, {"name": "subSuite", "value": "TestPosition"}, {"name": "host", "value": "Win102021AVUCSJ"}, {"name": "thread", "value": "10404-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testPosition.test_Qposition"}]}