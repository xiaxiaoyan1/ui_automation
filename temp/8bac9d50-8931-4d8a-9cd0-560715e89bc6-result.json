{"name": "test_now_price", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <testcases.testPosition.test_Qposition.TestPosition object at 0x00E38370>\nsetup_fixture = (<businessPage.position_page.Position object at 0x00E38D50>, <businessPage.order_page.Order object at 0x00E38D30>, <businessPage.trade_first_page.TradeFirst object at 0x00E38CF0>)\n\n    @pytest.mark.usefixtures('back_fixture')\n    def test_now_price(self, setup_fixture):\n        position,order,tradehome = setup_fixture\n        # 降序\n        order.c_hold_now_price()\n>       res = order.desc(3)\n\ntestPosition\\test_Qposition.py:66: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\businessPage\\order_page.py:558: in desc\n    arr = self.get_num(N)\n..\\businessPage\\order_page.py:511: in get_num\n    ele = self.get_visible_elements(self.hold_nowprices, \"所有持仓成本\")\n..\\common\\common_fun.py:224: in get_visible_elements\n    raise e\n..\\common\\common_fun.py:219: in get_visible_elements\n    WebDriverWait(self.driver,timeout,0.5).until(EC.visibility_of_element_located(loc))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"0e7b83d5-90bd-4243-ba0f-6351e0c81c1e\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x00E38DB0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "attachments": [{"name": "log", "source": "b154be59-ba68-4743-9f1f-ca56707734c5-attachment.txt", "type": "text/plain"}], "start": 1652795664193, "stop": 1652795679469, "uuid": "3cd5baa5-3dc7-4cf1-bc1c-740a910e215c", "historyId": "071b40e230d62d1dddf0d5292edeb30e", "testCaseId": "1b53e0b7e18305e771fe02f04082b5f2", "fullName": "testPosition.test_Qposition.TestPosition#test_now_price", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('back_fixture')"}, {"name": "parentSuite", "value": "testPosition"}, {"name": "suite", "value": "test_Qposition"}, {"name": "subSuite", "value": "TestPosition"}, {"name": "host", "value": "Win102021AVUCSJ"}, {"name": "thread", "value": "10404-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testPosition.test_Qposition"}]}