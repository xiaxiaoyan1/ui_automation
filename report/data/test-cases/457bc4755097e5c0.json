{
  "uid" : "457bc4755097e5c0",
  "name" : "test_setorder_switch_off",
  "fullName" : "testEntrustSetup.test_Qentrust_setup.TestEntrustSetup#test_setorder_switch_off",
  "historyId" : "36f026f2e4d660c4f22d9040c7a34c14",
  "time" : {
    "start" : 1652795104983,
    "stop" : 1652795106828,
    "duration" : 1845
  },
  "status" : "broken",
  "statusMessage" : "AttributeError: module 'pytest' has no attribute 'assume'",
  "statusTrace" : "self = <testcases.testEntrustSetup.test_Qentrust_setup.TestEntrustSetup object at 0x005F62F0>\nsetup_fixture = (<businessPage.trade_first_page.TradeFirst object at 0x00603410>, <businessPage.entrust_setup_page.Setup object at 0x0...<businessPage.choice_oder_page.ChoiceOrder object at 0x00603D90>, <businessPage.order_page.Order object at 0x006036B0>)\n\n    @pytest.mark.usefixtures('back_fixture')\n    def test_setorder_switch_off(self,setup_fixture):\n        tradehome, setup,choiceorder,order = setup_fixture\n        setup.setorder_switch()\n        order_switch_text = setup.el_text(setup.order_switch,\"下单确认开关text\")\n>       pytest.assume(\"关\" in order_switch_text)\nE       AttributeError: module 'pytest' has no attribute 'assume'\n\ntestEntrustSetup\\test_Qentrust_setup.py:82: AttributeError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "driver_fixture",
    "time" : {
      "start" : 1652794360868,
      "stop" : 1652794396581,
      "duration" : 35713
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "setup_fixture",
    "time" : {
      "start" : 1652795101981,
      "stop" : 1652795104982,
      "duration" : 3001
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "login_fixture",
    "time" : {
      "start" : 1652794396581,
      "stop" : 1652794501486,
      "duration" : 104905
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "back_fixture",
    "time" : {
      "start" : 1652795101981,
      "stop" : 1652795101981,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "AttributeError: module 'pytest' has no attribute 'assume'",
    "statusTrace" : "self = <testcases.testEntrustSetup.test_Qentrust_setup.TestEntrustSetup object at 0x005F62F0>\nsetup_fixture = (<businessPage.trade_first_page.TradeFirst object at 0x00603410>, <businessPage.entrust_setup_page.Setup object at 0x0...<businessPage.choice_oder_page.ChoiceOrder object at 0x00603D90>, <businessPage.order_page.Order object at 0x006036B0>)\n\n    @pytest.mark.usefixtures('back_fixture')\n    def test_setorder_switch_off(self,setup_fixture):\n        tradehome, setup,choiceorder,order = setup_fixture\n        setup.setorder_switch()\n        order_switch_text = setup.el_text(setup.order_switch,\"下单确认开关text\")\n>       pytest.assume(\"关\" in order_switch_text)\nE       AttributeError: module 'pytest' has no attribute 'assume'\n\ntestEntrustSetup\\test_Qentrust_setup.py:82: AttributeError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "1312238fb364342c",
      "name" : "log",
      "source" : "1312238fb364342c.txt",
      "type" : "text/plain",
      "size" : 411
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1
  },
  "afterStages" : [ {
    "name" : "driver_fixture::0",
    "time" : {
      "start" : 1652796124797,
      "stop" : 1652796124797,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "back_fixture::0",
    "time" : {
      "start" : 1652795106836,
      "stop" : 1652795107447,
      "duration" : 611
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('back_fixture')"
  }, {
    "name" : "parentSuite",
    "value" : "testEntrustSetup"
  }, {
    "name" : "suite",
    "value" : "test_Qentrust_setup"
  }, {
    "name" : "subSuite",
    "value" : "TestEntrustSetup"
  }, {
    "name" : "host",
    "value" : "Win102021AVUCSJ"
  }, {
    "name" : "thread",
    "value" : "10404-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testEntrustSetup.test_Qentrust_setup"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "ec6c7447d60a8369",
      "status" : "broken",
      "statusDetails" : "urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='localhost', port=4723): Max retries exceeded with url: /wd/hub/session (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0400E0D0>: Failed to establish a new connection: [WinError 10061] 由于目标计算机积极拒绝，无法连接。'))",
      "time" : {
        "start" : 1652793917311,
        "stop" : 1652793917311,
        "duration" : 0
      }
    }, {
      "uid" : "4a638b960136f3c",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.WebDriverException: Message: An unknown server-side error occurred while processing the command. Original error: 'GET /screenshot' cannot be proxied to UiAutomator2 server because the instrumentation process is not running (probably crashed). Check the server log and/or the logcat output for more details",
      "time" : {
        "start" : 1652713048111,
        "stop" : 1652713048111,
        "duration" : 0
      }
    }, {
      "uid" : "f12b9a31d74d1740",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.WebDriverException: Message: An unknown server-side error occurred while processing the command. Original error: 'GET /screenshot' cannot be proxied to UiAutomator2 server because the instrumentation process is not running (probably crashed). Check the server log and/or the logcat output for more details",
      "time" : {
        "start" : 1652712704514,
        "stop" : 1652712704514,
        "duration" : 0
      }
    }, {
      "uid" : "fbe0e538b0cb2597",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
      "time" : {
        "start" : 1652710822279,
        "stop" : 1652710822279,
        "duration" : 0
      }
    }, {
      "uid" : "d6048912f6eb3540",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
      "time" : {
        "start" : 1652710342170,
        "stop" : 1652710342170,
        "duration" : 0
      }
    }, {
      "uid" : "ae1e1d6c68967986",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.WebDriverException: Message: An unknown server-side error occurred while processing the command. Original error: Could not find a connected Android device in 20093ms.",
      "time" : {
        "start" : 1652710086304,
        "stop" : 1652710086304,
        "duration" : 0
      }
    } ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "@pytest.mark.usefixtures('back_fixture')" ]
  },
  "source" : "457bc4755097e5c0.json",
  "parameterValues" : [ ]
}