{
  "uid" : "1e74b229288e2fb8",
  "name" : "test_newpwd_null",
  "fullName" : "testChangePassword.test_Qchange_password.TestChangePassword#test_newpwd_null",
  "historyId" : "9093259b3d477e2bfa5ea7372d494dfa",
  "time" : {
    "start" : 1652713024577,
    "stop" : 1652713024577,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <testcases.testChangePassword.test_Qchange_password.TestChangePassword object at 0x00E0A490>\ndriver_fixture = <appium.webdriver.webdriver.WebDriver (session=\"3e7e3322-ff2d-4f2a-953a-a52f7e784abd\")>\n\n    @pytest.fixture(scope='function', autouse=False)\n    def setup_fixture(self, driver_fixture):\n        driver = driver_fixture\n        tradehome = TradeFirst(driver)\n        changepwd = ChangePwd(driver)\n        common = Common(driver)\n>       tradehome.to_trade_page()\n\ntestChangePassword\\test_Qchange_password.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\businessPage\\trade_first_page.py:40: in to_trade_page\n    self.get_clickable_element(self.trade_page,\"交易\")\n..\\common\\common_fun.py:276: in get_clickable_element\n    raise e\n..\\common\\common_fun.py:270: in get_clickable_element\n    ele = WebDriverWait(self.driver,timeout,0.5).until(EC.element_to_be_clickable(loc))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"3e7e3322-ff2d-4f2a-953a-a52f7e784abd\")>\nmethod = <selenium.webdriver.support.expected_conditions.element_to_be_clickable object at 0x00E0A8B0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "driver_fixture",
    "time" : {
      "start" : 1652712691148,
      "stop" : 1652712727823,
      "duration" : 36675
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "back_fixture",
    "time" : {
      "start" : 1652713024578,
      "stop" : 1652713024578,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "login_fixture",
    "time" : {
      "start" : 1652712727823,
      "stop" : 1652712774128,
      "duration" : 46305
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "old_pwd",
    "time" : {
      "start" : 1652712979223,
      "stop" : 1652712979224,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "setup_fixture",
    "time" : {
      "start" : 1652713024578,
      "stop" : 1652713036197,
      "duration" : 11619
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \n\n",
    "statusTrace" : "  File \"D:\\xiaxy\\python\\lib\\site-packages\\pluggy\\callers.py\", line 187, in _multicall\n    res = hook_impl.function(*args)\n  File \"D:\\xiaxy\\python\\lib\\site-packages\\_pytest\\fixtures.py\", line 1126, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"D:\\xiaxy\\python\\lib\\site-packages\\_pytest\\fixtures.py\", line 932, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"D:\\xiaxy\\automation_test2022.4.22\\testcases\\testChangePassword\\test_Qchange_password.py\", line 17, in setup_fixture\n    tradehome.to_trade_page()\n  File \"D:\\xiaxy\\automation_test2022.4.22\\businessPage\\trade_first_page.py\", line 40, in to_trade_page\n    self.get_clickable_element(self.trade_page,\"交易\")\n  File \"D:\\xiaxy\\automation_test2022.4.22\\common\\common_fun.py\", line 276, in get_clickable_element\n    raise e\n  File \"D:\\xiaxy\\automation_test2022.4.22\\common\\common_fun.py\", line 270, in get_clickable_element\n    ele = WebDriverWait(self.driver,timeout,0.5).until(EC.element_to_be_clickable(loc))\n  File \"D:\\xiaxy\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "self = <testcases.testChangePassword.test_Qchange_password.TestChangePassword object at 0x00E0A490>\ndriver_fixture = <appium.webdriver.webdriver.WebDriver (session=\"3e7e3322-ff2d-4f2a-953a-a52f7e784abd\")>\n\n    @pytest.fixture(scope='function', autouse=False)\n    def setup_fixture(self, driver_fixture):\n        driver = driver_fixture\n        tradehome = TradeFirst(driver)\n        changepwd = ChangePwd(driver)\n        common = Common(driver)\n>       tradehome.to_trade_page()\n\ntestChangePassword\\test_Qchange_password.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\businessPage\\trade_first_page.py:40: in to_trade_page\n    self.get_clickable_element(self.trade_page,\"交易\")\n..\\common\\common_fun.py:276: in get_clickable_element\n    raise e\n..\\common\\common_fun.py:270: in get_clickable_element\n    ele = WebDriverWait(self.driver,timeout,0.5).until(EC.element_to_be_clickable(loc))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"3e7e3322-ff2d-4f2a-953a-a52f7e784abd\")>\nmethod = <selenium.webdriver.support.expected_conditions.element_to_be_clickable object at 0x00E0A8B0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "64a4ed557f72d3aa",
      "name" : "log",
      "source" : "64a4ed557f72d3aa.txt",
      "type" : "text/plain",
      "size" : 7494
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1
  },
  "afterStages" : [ {
    "name" : "driver_fixture::0",
    "time" : {
      "start" : 1652713076497,
      "stop" : 1652713076498,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "back_fixture::0",
    "time" : {
      "start" : 1652713036222,
      "stop" : 1652713042987,
      "duration" : 6765
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.WebDriverException: Message: An unknown server-side error occurred while processing the command. Original error: 'GET /screenshot' cannot be proxied to UiAutomator2 server because the instrumentation process is not running (probably crashed). Check the server log and/or the logcat output for more details\n\n",
    "statusTrace" : "  File \"D:\\xiaxy\\python\\lib\\site-packages\\allure_commons\\_allure.py\", line 200, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"D:\\xiaxy\\python\\lib\\site-packages\\_pytest\\fixtures.py\", line 941, in _teardown_yield_fixture\n    next(it)\n  File \"D:\\xiaxy\\automation_test2022.4.22\\testcases\\conftest.py\", line 74, in back_fixture\n    com.back()\n  File \"D:\\xiaxy\\automation_test2022.4.22\\common\\common_fun.py\", line 367, in back\n    self.get_clickable_element(self.Back,\"返回\")\n  File \"D:\\xiaxy\\automation_test2022.4.22\\common\\common_fun.py\", line 275, in get_clickable_element\n    self.error_save_screenshot(desc)\n  File \"D:\\xiaxy\\automation_test2022.4.22\\common\\common_fun.py\", line 258, in error_save_screenshot\n    raise e\n  File \"D:\\xiaxy\\automation_test2022.4.22\\common\\common_fun.py\", line 254, in error_save_screenshot\n    self.driver.save_screenshot(file_path)\n  File \"D:\\xiaxy\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 1055, in save_screenshot\n    return self.get_screenshot_as_file(filename)\n  File \"D:\\xiaxy\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 1032, in get_screenshot_as_file\n    png = self.get_screenshot_as_png()\n  File \"D:\\xiaxy\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 1064, in get_screenshot_as_png\n    return base64.b64decode(self.get_screenshot_as_base64().encode('ascii'))\n  File \"D:\\xiaxy\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 1074, in get_screenshot_as_base64\n    return self.execute(Command.SCREENSHOT)['value']\n  File \"D:\\xiaxy\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 321, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\xiaxy\\python\\lib\\site-packages\\appium\\webdriver\\errorhandler.py\", line 31, in check_response\n    raise wde\n  File \"D:\\xiaxy\\python\\lib\\site-packages\\appium\\webdriver\\errorhandler.py\", line 26, in check_response\n    super().check_response(response)\n  File \"D:\\xiaxy\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 242, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 0
  }, {
    "name" : "old_pwd::0",
    "time" : {
      "start" : 1652713076490,
      "stop" : 1652713076491,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('back_fixture')"
  }, {
    "name" : "parentSuite",
    "value" : "testChangePassword"
  }, {
    "name" : "suite",
    "value" : "test_Qchange_password"
  }, {
    "name" : "subSuite",
    "value" : "TestChangePassword"
  }, {
    "name" : "host",
    "value" : "Win102021AVUCSJ"
  }, {
    "name" : "thread",
    "value" : "5784-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testChangePassword.test_Qchange_password"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "@pytest.mark.usefixtures('back_fixture')" ]
  },
  "source" : "1e74b229288e2fb8.json",
  "parameterValues" : [ ]
}