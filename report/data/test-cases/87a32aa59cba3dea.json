{
  "uid" : "87a32aa59cba3dea",
  "name" : "test_merger_exercise",
  "fullName" : "testMergerExercise.test_Xmerger.TestClok#test_merger_exercise",
  "historyId" : "0a40dd9a7cdd7d6fb7e39895c1eb3fde",
  "time" : {
    "start" : 1652795386009,
    "stop" : 1652795548160,
    "duration" : 162151
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert None == True\n  +None\n  -True",
  "statusTrace" : "self = <testcases.testMergerExercise.test_Xmerger.TestClok object at 0x00D47E70>\n\n    @pytest.mark.usefixtures('back_fixture')\n    def test_merger_exercise(self):\n        global tradehome, choiceorder, order, mergerexe\n        tradehome.to_trade_page()\n        # 创造行权价低的认购期权\n        tradehome.to_order()\n        contract1_name = choiceorder.c_orderpage()  # 获得下单合约名称\n        order.c_hand()\n        order.c_orderbuy()\n        mergerexe.c_back()\n        # 创造行权价高的认沽期权\n        tradehome.to_order()\n        contract2_name = choiceorder.c_contract(contract1_name,\"沽\",\"+\")  # 获得下单合约名称\n        order.c_hand()\n        order.c_orderbuy()\n        mergerexe.c_back()\n        # 合并行权\n        tradehome.to_merger_exe()\n        res = mergerexe.exercise(contract1_name)\n>       assert res == True\nE       assert None == True\nE         +None\nE         -True\n\ntestMergerExercise\\test_Xmerger.py:40: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "driver_fixture",
    "time" : {
      "start" : 1652794360868,
      "stop" : 1652794396581,
      "duration" : 35713
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "login_fixture",
    "time" : {
      "start" : 1652794396581,
      "stop" : 1652794501486,
      "duration" : 104905
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "back_fixture",
    "time" : {
      "start" : 1652795386009,
      "stop" : 1652795386009,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert None == True\n  +None\n  -True",
    "statusTrace" : "self = <testcases.testMergerExercise.test_Xmerger.TestClok object at 0x00D47E70>\n\n    @pytest.mark.usefixtures('back_fixture')\n    def test_merger_exercise(self):\n        global tradehome, choiceorder, order, mergerexe\n        tradehome.to_trade_page()\n        # 创造行权价低的认购期权\n        tradehome.to_order()\n        contract1_name = choiceorder.c_orderpage()  # 获得下单合约名称\n        order.c_hand()\n        order.c_orderbuy()\n        mergerexe.c_back()\n        # 创造行权价高的认沽期权\n        tradehome.to_order()\n        contract2_name = choiceorder.c_contract(contract1_name,\"沽\",\"+\")  # 获得下单合约名称\n        order.c_hand()\n        order.c_orderbuy()\n        mergerexe.c_back()\n        # 合并行权\n        tradehome.to_merger_exe()\n        res = mergerexe.exercise(contract1_name)\n>       assert res == True\nE       assert None == True\nE         +None\nE         -True\n\ntestMergerExercise\\test_Xmerger.py:40: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "9a7a429b7e5d1c82",
      "name" : "log",
      "source" : "9a7a429b7e5d1c82.txt",
      "type" : "text/plain",
      "size" : 2420
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1
  },
  "afterStages" : [ {
    "name" : "driver_fixture::0",
    "time" : {
      "start" : 1652796124797,
      "stop" : 1652796124797,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "back_fixture::0",
    "time" : {
      "start" : 1652795548164,
      "stop" : 1652795548297,
      "duration" : 133
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('back_fixture')"
  }, {
    "name" : "parentSuite",
    "value" : "testMergerExercise"
  }, {
    "name" : "suite",
    "value" : "test_Xmerger"
  }, {
    "name" : "subSuite",
    "value" : "TestClok"
  }, {
    "name" : "host",
    "value" : "Win102021AVUCSJ"
  }, {
    "name" : "thread",
    "value" : "10404-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testMergerExercise.test_Xmerger"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "b038dc3cdad315aa",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.WebDriverException: Message: An unknown server-side error occurred while processing the command. Original error: 'GET /screenshot' cannot be proxied to UiAutomator2 server because the instrumentation process is not running (probably crashed). Check the server log and/or the logcat output for more details",
      "time" : {
        "start" : 1652713065794,
        "stop" : 1652713065803,
        "duration" : 9
      }
    }, {
      "uid" : "822bc9ac0785d431",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.WebDriverException: Message: An unknown server-side error occurred while processing the command. Original error: 'GET /screenshot' cannot be proxied to UiAutomator2 server because the instrumentation process is not running (probably crashed). Check the server log and/or the logcat output for more details",
      "time" : {
        "start" : 1652712722362,
        "stop" : 1652712722372,
        "duration" : 10
      }
    }, {
      "uid" : "7cf4fbcb9c61b8bc",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
      "time" : {
        "start" : 1652710824373,
        "stop" : 1652710824373,
        "duration" : 0
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "@pytest.mark.usefixtures('back_fixture')" ]
  },
  "source" : "87a32aa59cba3dea.json",
  "parameterValues" : [ ]
}