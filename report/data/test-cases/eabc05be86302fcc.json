{
  "uid" : "eabc05be86302fcc",
  "name" : "test_clok",
  "fullName" : "testLock.test_lock.TestClok#test_clok",
  "historyId" : "219a6e67f24c90218003696565e49d41",
  "time" : {
    "start" : 1652795335249,
    "stop" : 1652795347352,
    "duration" : 12103
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False == True\n  +False\n  -True",
  "statusTrace" : "self = <testcases.testLock.test_lock.TestClok object at 0x00D76C10>\nsetup_fixture = <businessPage.clok_page.ClokUnclok object at 0x00D765B0>\n\n    @pytest.mark.usefixtures('back_fixture')\n    def test_clok(self,setup_fixture):\n        clokunclok = setup_fixture\n        res = clokunclok.clok_confirm()\n>       assert res == True\nE       assert False == True\nE         +False\nE         -True\n\ntestLock\\test_lock.py:23: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "driver_fixture",
    "time" : {
      "start" : 1652794360868,
      "stop" : 1652794396581,
      "duration" : 35713
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "login_fixture",
    "time" : {
      "start" : 1652794396581,
      "stop" : 1652794501486,
      "duration" : 104905
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "back_fixture",
    "time" : {
      "start" : 1652795334309,
      "stop" : 1652795334310,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "setup_fixture",
    "time" : {
      "start" : 1652795334310,
      "stop" : 1652795335249,
      "duration" : 939
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert False == True\n  +False\n  -True",
    "statusTrace" : "self = <testcases.testLock.test_lock.TestClok object at 0x00D76C10>\nsetup_fixture = <businessPage.clok_page.ClokUnclok object at 0x00D765B0>\n\n    @pytest.mark.usefixtures('back_fixture')\n    def test_clok(self,setup_fixture):\n        clokunclok = setup_fixture\n        res = clokunclok.clok_confirm()\n>       assert res == True\nE       assert False == True\nE         +False\nE         -True\n\ntestLock\\test_lock.py:23: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "d7182620a9d9b86a",
      "name" : "log",
      "source" : "d7182620a9d9b86a.txt",
      "type" : "text/plain",
      "size" : 614
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1
  },
  "afterStages" : [ {
    "name" : "driver_fixture::0",
    "time" : {
      "start" : 1652796124797,
      "stop" : 1652796124797,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "back_fixture::0",
    "time" : {
      "start" : 1652795347356,
      "stop" : 1652795347464,
      "duration" : 108
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('back_fixture')"
  }, {
    "name" : "parentSuite",
    "value" : "testLock"
  }, {
    "name" : "suite",
    "value" : "test_lock"
  }, {
    "name" : "subSuite",
    "value" : "TestClok"
  }, {
    "name" : "host",
    "value" : "Win102021AVUCSJ"
  }, {
    "name" : "thread",
    "value" : "10404-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testLock.test_lock"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "b15f3d7914abffcb",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.WebDriverException: Message: An unknown server-side error occurred while processing the command. Original error: 'GET /screenshot' cannot be proxied to UiAutomator2 server because the instrumentation process is not running (probably crashed). Check the server log and/or the logcat output for more details",
      "time" : {
        "start" : 1652713065249,
        "stop" : 1652713065249,
        "duration" : 0
      }
    }, {
      "uid" : "eecd2ee89b39d05e",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.WebDriverException: Message: An unknown server-side error occurred while processing the command. Original error: 'GET /screenshot' cannot be proxied to UiAutomator2 server because the instrumentation process is not running (probably crashed). Check the server log and/or the logcat output for more details",
      "time" : {
        "start" : 1652712721809,
        "stop" : 1652712721809,
        "duration" : 0
      }
    }, {
      "uid" : "d188ffde74168ce",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
      "time" : {
        "start" : 1652710824286,
        "stop" : 1652710824286,
        "duration" : 0
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "@pytest.mark.usefixtures('back_fixture')" ]
  },
  "source" : "eabc05be86302fcc.json",
  "parameterValues" : [ ]
}