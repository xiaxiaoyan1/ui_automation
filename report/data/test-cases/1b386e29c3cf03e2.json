{
  "uid" : "1b386e29c3cf03e2",
  "name" : "test_arrow",
  "fullName" : "textContract.test_Qcontract.TestOrder#test_arrow",
  "historyId" : "9baeb06ad716de41a003369fc778f345",
  "time" : {
    "start" : 1652795873076,
    "stop" : 1652795873076,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <testcases.textContract.test_Qcontract.TestOrder object at 0x00DEE4D0>\ndriver_fixture = <appium.webdriver.webdriver.WebDriver (session=\"0e7b83d5-90bd-4243-ba0f-6351e0c81c1e\")>\n\n    @pytest.fixture(scope='function', autouse=False)\n    def setup_fixture(self, driver_fixture):\n        driver = driver_fixture\n        tradehome = TradeFirst(driver)\n        first = First(driver)\n        screen = Screen(driver)\n        contract = Contract(driver)\n        order = Order(driver)\n        optional = Optional(driver)\n>       tradehome.to_first_page()\n\ntextContract\\test_Qcontract.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\businessPage\\trade_first_page.py:34: in to_first_page\n    self.get_clickable_element(self.first_page,\"首页\")\n..\\common\\common_fun.py:276: in get_clickable_element\n    raise e\n..\\common\\common_fun.py:270: in get_clickable_element\n    ele = WebDriverWait(self.driver,timeout,0.5).until(EC.element_to_be_clickable(loc))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"0e7b83d5-90bd-4243-ba0f-6351e0c81c1e\")>\nmethod = <selenium.webdriver.support.expected_conditions.element_to_be_clickable object at 0x00DEE190>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "driver_fixture",
    "time" : {
      "start" : 1652794360868,
      "stop" : 1652794396581,
      "duration" : 35713
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "login_fixture",
    "time" : {
      "start" : 1652794396581,
      "stop" : 1652794501486,
      "duration" : 104905
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "setup_fixture",
    "time" : {
      "start" : 1652795873078,
      "stop" : 1652795884542,
      "duration" : 11464
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \n\n",
    "statusTrace" : "  File \"D:\\xiaxy\\python\\lib\\site-packages\\pluggy\\callers.py\", line 187, in _multicall\n    res = hook_impl.function(*args)\n  File \"D:\\xiaxy\\python\\lib\\site-packages\\_pytest\\fixtures.py\", line 1126, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"D:\\xiaxy\\python\\lib\\site-packages\\_pytest\\fixtures.py\", line 932, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"D:\\xiaxy\\automation_test2022.4.22\\testcases\\textContract\\test_Qcontract.py\", line 25, in setup_fixture\n    tradehome.to_first_page()\n  File \"D:\\xiaxy\\automation_test2022.4.22\\businessPage\\trade_first_page.py\", line 34, in to_first_page\n    self.get_clickable_element(self.first_page,\"首页\")\n  File \"D:\\xiaxy\\automation_test2022.4.22\\common\\common_fun.py\", line 276, in get_clickable_element\n    raise e\n  File \"D:\\xiaxy\\automation_test2022.4.22\\common\\common_fun.py\", line 270, in get_clickable_element\n    ele = WebDriverWait(self.driver,timeout,0.5).until(EC.element_to_be_clickable(loc))\n  File \"D:\\xiaxy\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 0
  }, {
    "name" : "back_fixture",
    "time" : {
      "start" : 1652795873078,
      "stop" : 1652795873078,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "self = <testcases.textContract.test_Qcontract.TestOrder object at 0x00DEE4D0>\ndriver_fixture = <appium.webdriver.webdriver.WebDriver (session=\"0e7b83d5-90bd-4243-ba0f-6351e0c81c1e\")>\n\n    @pytest.fixture(scope='function', autouse=False)\n    def setup_fixture(self, driver_fixture):\n        driver = driver_fixture\n        tradehome = TradeFirst(driver)\n        first = First(driver)\n        screen = Screen(driver)\n        contract = Contract(driver)\n        order = Order(driver)\n        optional = Optional(driver)\n>       tradehome.to_first_page()\n\ntextContract\\test_Qcontract.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\businessPage\\trade_first_page.py:34: in to_first_page\n    self.get_clickable_element(self.first_page,\"首页\")\n..\\common\\common_fun.py:276: in get_clickable_element\n    raise e\n..\\common\\common_fun.py:270: in get_clickable_element\n    ele = WebDriverWait(self.driver,timeout,0.5).until(EC.element_to_be_clickable(loc))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"0e7b83d5-90bd-4243-ba0f-6351e0c81c1e\")>\nmethod = <selenium.webdriver.support.expected_conditions.element_to_be_clickable object at 0x00DEE190>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "eec64dd20d9e3557",
      "name" : "log",
      "source" : "eec64dd20d9e3557.txt",
      "type" : "text/plain",
      "size" : 1253
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1
  },
  "afterStages" : [ {
    "name" : "driver_fixture::0",
    "time" : {
      "start" : 1652796124797,
      "stop" : 1652796124797,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "back_fixture::0",
    "time" : {
      "start" : 1652795884566,
      "stop" : 1652795895847,
      "duration" : 11281
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \n\n",
    "statusTrace" : "  File \"D:\\xiaxy\\python\\lib\\site-packages\\allure_commons\\_allure.py\", line 200, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"D:\\xiaxy\\python\\lib\\site-packages\\_pytest\\fixtures.py\", line 941, in _teardown_yield_fixture\n    next(it)\n  File \"D:\\xiaxy\\automation_test2022.4.22\\testcases\\conftest.py\", line 74, in back_fixture\n    com.back()\n  File \"D:\\xiaxy\\automation_test2022.4.22\\common\\common_fun.py\", line 367, in back\n    self.get_clickable_element(self.Back,\"返回\")\n  File \"D:\\xiaxy\\automation_test2022.4.22\\common\\common_fun.py\", line 276, in get_clickable_element\n    raise e\n  File \"D:\\xiaxy\\automation_test2022.4.22\\common\\common_fun.py\", line 270, in get_clickable_element\n    ele = WebDriverWait(self.driver,timeout,0.5).until(EC.element_to_be_clickable(loc))\n  File \"D:\\xiaxy\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('back_fixture')"
  }, {
    "name" : "parentSuite",
    "value" : "textContract"
  }, {
    "name" : "suite",
    "value" : "test_Qcontract"
  }, {
    "name" : "subSuite",
    "value" : "TestOrder"
  }, {
    "name" : "host",
    "value" : "Win102021AVUCSJ"
  }, {
    "name" : "thread",
    "value" : "10404-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "textContract.test_Qcontract"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "b533416f31ee4e46",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.WebDriverException: Message: An unknown server-side error occurred while processing the command. Original error: 'GET /screenshot' cannot be proxied to UiAutomator2 server because the instrumentation process is not running (probably crashed). Check the server log and/or the logcat output for more details",
      "time" : {
        "start" : 1652713073538,
        "stop" : 1652713073538,
        "duration" : 0
      }
    }, {
      "uid" : "f059baa5f4fda77c",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.WebDriverException: Message: An unknown server-side error occurred while processing the command. Original error: 'GET /screenshot' cannot be proxied to UiAutomator2 server because the instrumentation process is not running (probably crashed). Check the server log and/or the logcat output for more details",
      "time" : {
        "start" : 1652712730057,
        "stop" : 1652712730057,
        "duration" : 0
      }
    }, {
      "uid" : "509f4d3291ec12eb",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
      "time" : {
        "start" : 1652710825211,
        "stop" : 1652710825211,
        "duration" : 0
      }
    }, {
      "uid" : "9b59104d578d4697",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
      "time" : {
        "start" : 1652710344683,
        "stop" : 1652710344683,
        "duration" : 0
      }
    }, {
      "uid" : "e1f80cf4aa9ee383",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.WebDriverException: Message: An unknown server-side error occurred while processing the command. Original error: Could not find a connected Android device in 20093ms.",
      "time" : {
        "start" : 1652710090289,
        "stop" : 1652710090289,
        "duration" : 0
      }
    } ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "@pytest.mark.usefixtures('back_fixture')" ]
  },
  "source" : "1b386e29c3cf03e2.json",
  "parameterValues" : [ ]
}